#!/bin/bash

# Script para Alternar entre Vers√µes do ESP32-CAM
# Gabriel Passos - UNESP 2025

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}üîÑ Alternador de Vers√µes ESP32-CAM${NC}"
echo -e "${BLUE}Gabriel Passos - UNESP 2025${NC}"
echo -e "${BLUE}========================================${NC}"

# Verificar se estamos no diret√≥rio correto
if [ -f "../esp32/main/main.c" ] && [ -f "../esp32/main/main_simple.c" ]; then
    # Executado de dentro da pasta scripts/
    cd ..
elif [ ! -f "esp32/main/main.c" ] || [ ! -f "esp32/main/main_simple.c" ]; then
    # N√£o est√° nem na raiz nem em scripts/
    echo -e "${RED}‚ùå Erro: Execute este script a partir da pasta raiz do projeto${NC}"
    echo -e "${YELLOW}üí° Use: ./scripts/switch_version.sh${NC}"
    echo -e "${YELLOW}Estrutura esperada:${NC}"
    echo -e "${YELLOW}  esp32/main/main.c (vers√£o inteligente)${NC}"
    echo -e "${YELLOW}  esp32/main/main_simple.c (vers√£o simples)${NC}"
    exit 1
fi

# Detectar vers√£o atual
current_version="unknown"
if grep -q "IMG_MONITOR_SIMPLE" esp32/main/main.c 2>/dev/null; then
    current_version="simple"
elif grep -q "IMG_MONITOR" esp32/main/main.c 2>/dev/null; then
    current_version="intelligent"
fi

echo -e "${BLUE}üìã Status Atual:${NC}"
echo -e "   Vers√£o ativa: ${current_version}"

# Menu de op√ß√µes
echo -e "\n${YELLOW}üîÑ Escolha a vers√£o:${NC}"
echo -e "   ${GREEN}1)${NC} Vers√£o INTELIGENTE (com compara√ß√£o de imagens)"
echo -e "   ${GREEN}2)${NC} Vers√£o SIMPLES (envia todas as imagens)"
echo -e "   ${GREEN}3)${NC} Ver diferen√ßas entre vers√µes"
echo -e "   ${GREEN}4)${NC} Status atual"
echo -e "   ${GREEN}0)${NC} Sair"

read -p "üéØ Escolha uma op√ß√£o: " choice

case $choice in
    1)
        if [ "$current_version" = "intelligent" ]; then
            echo -e "${YELLOW}‚ö†Ô∏è  Vers√£o INTELIGENTE j√° est√° ativa${NC}"
        else
            echo -e "${YELLOW}üîÑ Alternando para vers√£o INTELIGENTE...${NC}"
            
            # Backup da vers√£o atual
            cp esp32/main/main.c esp32/main/main_backup.c
            
            # Verificar se main_intelligent.c existe, sen√£o usar main.c original
            if [ -f "esp32/main/main_intelligent.c" ]; then
                cp esp32/main/main_intelligent.c esp32/main/main.c
            else
                # Se n√£o existe, assumir que main.c j√° √© a vers√£o inteligente
                echo -e "${GREEN}‚úÖ main.c j√° cont√©m a vers√£o inteligente${NC}"
            fi
            
            echo -e "${GREEN}‚úÖ Vers√£o INTELIGENTE ativada${NC}"
            echo -e "${BLUE}üìã Caracter√≠sticas:${NC}"
            echo -e "   - Compara√ß√£o pixel a pixel"
            echo -e "   - Detec√ß√£o de mudan√ßas (3%)"
            echo -e "   - Alertas cr√≠ticos (12%)"
            echo -e "   - An√°lise avan√ßada com PSRAM"
            echo -e "   - Envio seletivo de imagens"
        fi
        ;;
    2)
        if [ "$current_version" = "simple" ]; then
            echo -e "${YELLOW}‚ö†Ô∏è  Vers√£o SIMPLES j√° est√° ativa${NC}"
        else
            echo -e "${YELLOW}üîÑ Alternando para vers√£o SIMPLES...${NC}"
            
            # Backup da vers√£o atual
            cp esp32/main/main.c esp32/main/main_backup.c
            
            # Copiar vers√£o simples
            cp esp32/main/main_simple.c esp32/main/main.c
            
            echo -e "${GREEN}‚úÖ Vers√£o SIMPLES ativada${NC}"
            echo -e "${BLUE}üìã Caracter√≠sticas:${NC}"
            echo -e "   - SEM compara√ß√£o de imagens"
            echo -e "   - Envia TODAS as fotos (100%)"
            echo -e "   - Menor uso de CPU"
            echo -e "   - Maior tr√°fego de rede"
            echo -e "   - Ideal para baseline de testes"
        fi
        ;;
    3)
        echo -e "${BLUE}üìä === DIFEREN√áAS ENTRE VERS√ïES ===${NC}"
        echo -e "\n${GREEN}üß† VERS√ÉO INTELIGENTE:${NC}"
        echo -e "   ‚úÖ Compara√ß√£o de imagens pixel a pixel"
        echo -e "   ‚úÖ Detec√ß√£o de mudan√ßas (threshold 3%)"
        echo -e "   ‚úÖ Alertas cr√≠ticos (threshold 12%)"
        echo -e "   ‚úÖ An√°lise avan√ßada com buffer hist√≥rico"
        echo -e "   ‚úÖ Refer√™ncias m√∫ltiplas (dia/noite)"
        echo -e "   ‚úÖ Detec√ß√£o de anomalias"
        echo -e "   ‚úÖ Envio seletivo (~10-20% das imagens)"
        echo -e "   ‚úÖ Economia de banda e armazenamento"
        echo -e "   ‚ö†Ô∏è  Maior uso de CPU e PSRAM"
        
        echo -e "\n${YELLOW}üì∑ VERS√ÉO SIMPLES:${NC}"
        echo -e "   ‚ùå SEM compara√ß√£o de imagens"
        echo -e "   ‚ùå SEM detec√ß√£o de mudan√ßas"
        echo -e "   ‚ùå SEM an√°lise avan√ßada"
        echo -e "   ‚úÖ Envia TODAS as imagens (100%)"
        echo -e "   ‚úÖ Menor uso de CPU"
        echo -e "   ‚úÖ Menor uso de PSRAM"
        echo -e "   ‚úÖ Processamento mais r√°pido"
        echo -e "   ‚ö†Ô∏è  Muito mais tr√°fego de rede"
        echo -e "   ‚ö†Ô∏è  Maior uso de armazenamento"
        
        echo -e "\n${BLUE}üéØ USO RECOMENDADO:${NC}"
        echo -e "   INTELIGENTE: Produ√ß√£o, monitoramento real"
        echo -e "   SIMPLES: Testes, baseline, debug"
        ;;
    4)
        echo -e "${BLUE}üìã === STATUS ATUAL ===${NC}"
        
        # Informa√ß√µes detalhadas da vers√£o atual
        if [ "$current_version" = "intelligent" ]; then
            echo -e "   Vers√£o: ${GREEN}INTELIGENTE${NC}"
            echo -e "   Arquivo: main.c (com compara√ß√£o)"
            echo -e "   TAG: IMG_MONITOR"
            
            # Verificar configura√ß√µes espec√≠ficas
            if grep -q "calculate_image_difference" esp32/main/main.c; then
                echo -e "   ‚úÖ Compara√ß√£o de imagens: ATIVA"
            fi
            if grep -q "advanced_analysis_init" esp32/main/main.c; then
                echo -e "   ‚úÖ An√°lise avan√ßada: ATIVA"
            fi
            
        elif [ "$current_version" = "simple" ]; then
            echo -e "   Vers√£o: ${YELLOW}SIMPLES${NC}"
            echo -e "   Arquivo: main.c (sem compara√ß√£o)"
            echo -e "   TAG: IMG_MONITOR_SIMPLE"
            echo -e "   ‚úÖ Envio total: ATIVO"
            echo -e "   ‚ùå Compara√ß√£o: DESABILITADA"
            
        else
            echo -e "   Vers√£o: ${RED}DESCONHECIDA${NC}"
            echo -e "   ‚ö†Ô∏è  N√£o foi poss√≠vel detectar a vers√£o"
        fi
        
        # Verificar se h√° backup
        if [ -f "esp32/main/main_backup.c" ]; then
            echo -e "   üíæ Backup dispon√≠vel: main_backup.c"
        fi
        ;;
    0)
        echo -e "${GREEN}üëã Saindo...${NC}"
        exit 0
        ;;
    *)
        echo -e "${RED}‚ùå Op√ß√£o inv√°lida!${NC}"
        exit 1
        ;;
esac

echo -e "\n${BLUE}üöÄ Pr√≥ximos passos:${NC}"
echo -e "   ${GREEN}1.${NC} Compile: ${YELLOW}cd esp32 && idf.py build${NC}"
echo -e "   ${GREEN}2.${NC} Flash: ${YELLOW}idf.py flash monitor${NC}"
echo -e "   ${GREEN}3.${NC} Execute testes comparativos"

echo -e "\n${BLUE}========================================${NC}"
echo -e "${GREEN}‚úÖ Opera√ß√£o conclu√≠da!${NC}"
echo -e "${BLUE}========================================${NC}" 